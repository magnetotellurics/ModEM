#!/bin/sh
if [ $# -le 1 ]; then
    echo 1>&2 Usage: $0 Makefile [debug|release|MPI] [spherical]
    exit 127
fi
if [ -e $1 ]; then
    rm $1
fi

MT_path_dir="3D_MT:3D_MT/DICT:3D_MT/modelParam:3D_MT/FWD:3D_MT/FWD/Mod2d:3D_MT/ioMod"
EM_path_dir="3D_EM:3D_EM/DICT:3D_EM/Dipole1D:3D_EM/DC_Geoelec"
SP_path_dir="3D_MT/FWD_SP:3D_MT/SP_Topology"
INV_dir="INV"

if [ $2 = "debug" ]; then
# Debug configuration
perl fmkmf.pl -f90 gfortran \
-opt '-g -fbacktrace -fbounds-check -ffree-line-length-none' \
-mpi '-x f95-cpp-input' \
-o './objs/3D_MT/GFortDebug' \
-l '-llapack -lblas' \
-lp '/usr/lib64  -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib' \
-p .:$INV_dir:LAPACK:SENS:UTILS:FIELDS/FiniteDiff3D:$SP_path_dir:$EM_path_dir:$MT_path_dir \
Mod3DMT.f90 > $1

elif [ $2 = "release" ]; then
# Release configuration
perl fmkmf.pl -f90 gfortran \
-opt '-O3 -ffree-line-length-none' \
-mpi '-x f95-cpp-input' \
-o './objs/3D_MT/GFortRelease' \
-l '-llapack -lblas' \
-lp '/usr/lib64 -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib' \
-p .:$INV_dir:LAPACK:SENS:UTILS:FIELDS/FiniteDiff3D:$SP_path_dir:$EM_path_dir:$MT_path_dir \
Mod3DMT.f90 > $1

else
# MPI configuration
perl fmkmf.pl -f90 gfortran \
-opt '-O3 -ffree-line-length-none' \
-mpi '-x f95-cpp-input -DMPI' \
-o './objs/3D_MT/GFortReleaseMPI' \
-l '-llapack -lblas' \
-lp '/usr/lib64 -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib' \
-p .:MPI:$INV_dir:LAPACK:SENS:UTILS:FIELDS/FiniteDiff3D:$SP_path_dir:$EM_path_dir:$MT_path_dir \
Mod3DMT.f90 > $1
fi

if [ $# -le 2 ]; then
    sed -i .bak 's/\/Mod3DMT/\/Mod3DJT_SP/g' $1
    echo 1>&2 Cartesian version of the makefile ready to use.
    exit
fi

if [ $3 = "spherical" ]; then
	sed -i .bak 's/IFort/IFortS/g' $1
	sed -i .bak 's/GridCalc\./GridCalcS\./g' $1
	sed -i .bak 's/boundary_ws\./boundary_wsS\./g' $1
  	sed -i .bak 's/MetricElements_CSG\./MetricElements_SSG\./g' $1
	sed -i .bak 's/3DMT /3DJT_SP_sph /g' $1
	sed -i .bak 's/3DMT:/3DJT_SP_sph:/g' $1	
	if [ $2 == "debug" ]; then
		sed -i .bak 's/3DJT_SP_sph/3DJT_SP_sph_dbg/g' $1
	elif [ $2 == "release" ]; then
		sed -i .bak 's/3DJT_SP_sph/3DJT_SP_sph/g' $1
	else
		sed -i .bak 's/3DJT_SP_sph/3DJT_SP_sph_MPI/g' $1
	fi    
	rm $1.bak
    echo 1>&2 Spherical version of the makefile ready to use.
else
	sed -i .bak 's/3DMT /3DJT_SP /g' $1
	sed -i .bak 's/3DMT:/3DJT_SP:/g' $1
	if [ $2 == "debug" ]; then
		sed -i .bak 's/3DJT_SP/3DJT_SP_dbg/g' $1
	elif [ $2 == "release" ]; then
		sed -i .bak 's/3DJT_SP/3DJT_SP/g' $1
	else
		sed -i .bak 's/3DJT_SP/3DJT_SP_MPI/g' $1
	fi    
    rm $1.bak
    echo 1>&2 Cartesian version of the makefile ready to use.
fi
